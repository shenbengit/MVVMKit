plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'maven-publish'
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    namespace "com.shencoder.mvvmkit"

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 1
        versionName "1.0"

        consumerProguardFiles "proguard-rules.pro"
    }

    compileOptions {
        kotlinOptions.freeCompilerArgs += ['-module-name', "com.github.shenbengit.MVVMKit"]
    }

    buildFeatures {
        dataBinding = true
        buildConfig = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }
}

dependencies {
    compileOnly 'androidx.appcompat:appcompat:1.1.0'

    def lifecycle = rootProject.ext.deps.lifecycle
    api lifecycle.lifecycle_runtime_ktx
    api lifecycle.lifecycle_viewmodel_ktx
    api lifecycle.lifecycle_common_java8
    api lifecycle.lifecycle_livedata_ktx

    def http = rootProject.ext.deps.http
    api http.retrofit
    api http.converter_moshi
    api http.okhttp3_logging_interceptor

    def moshi = rootProject.ext.deps.moshi
    api moshi.moshi_kotlin
    kapt moshi.moshi_kotlin_codegen

    api rootProject.ext.deps.koin
    api rootProject.ext.deps.coil
    api rootProject.ext.deps.coroutines

    api rootProject.ext.deps.mmkv
    api rootProject.ext.deps.fragmentation
    api rootProject.ext.deps.xlog
    api rootProject.ext.deps.toasty
    api rootProject.ext.deps.loadingDialog

    compileOnly 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    compileOnly 'androidx.recyclerview:recyclerview:1.3.0'
}

// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.
afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                // You can then customize attributes of the publication as shown below.
                groupId = 'com.shencoder'
                artifactId = 'mvvmkit'
                version = '1.1.8'
            }
        }
    }
}